@model Evaluation

@{
	ViewBag.Title = "Оценка компетенций сотрудника";
	var account = ViewBag.CurrentAccount as Account;
	var examinee = ViewBag.Examinee as Account;
	var errors = ViewBag.IndicatorErrors as List<string>;
	var values = ViewBag.IndicatorValues as Dictionary<string, string>;
	var competencyList = ViewBag.CompetencyList as CompetencyList;
	var evaluation = ViewBag.Evaluation as Evaluation;
}

<h2>Оценка компетенций сотрудника</h2>
<dl class="dl-horizontal">
	<dt>ФИО, Должность</dt>
	<dd>@examinee.FullName, @examinee.Position</dd>

	<dt>Регион, Отдел</dt>
	<dd>@examinee.Region (@examinee.MicroRegion), @examinee.Department</dd>
</dl>

<h5 class="text-danger">@((errors != null && errors.Count > 0) ? "Недопустимые значения оценки" : "")</h5>

<form method="post">
	@Html.AntiForgeryToken()
	<div class="form-horizontal">
		@foreach (var competency in competencyList.Competencies)
		{
			if (!evaluation.EvaluationValues.Any(ev => ev.Competency == competency.Id)) { continue; }
			<h4>Компетенция: @competency.Title</h4>
			<table class="table">
				<tr class="info">
					<th>Индикатор</th>
					<th>Не соответствует ожиданиям (1 балл)</th>
					<th>Соответствует ожиданиям (2 балла)</th>
					<th>Превосходит ожидания (3 балла)</th>
					<th>Оценка сотрудника</th>
					@if (evaluation.Examinier != null)
					{
						<th>Оценка функц. руководителя</th>
					}
					@if (evaluation.Manager != null)
					{
						<th>Оценка админ. руководителя</th>
					}
					<th>Оценить:</th>
				</tr>
				@foreach (var indicator in competency.Indicators)
				{
					var item = evaluation.EvaluationValues.FirstOrDefault(ev => ev.Indicator == indicator.Id);
					if (item == null) { continue; }
					<tr>
						<td>@indicator.Title</td>
						<td>@indicator.LessThanExpectations</td>
						<td>@indicator.EqualsToExpectations</td>
						<td>@indicator.MoreThanExpectations</td>
						<td>@item.Value</td>
						@if (evaluation.Examinier != null)
						{
							<td>@item.ReviewValue</td>
						}
						@if (evaluation.Manager != null)
						{
							<td>@item.ManagerValue</td>
						}
						<td>
							@{
								var name = "indicator_" + competency.Id + "_" + indicator.Id;
							}
							<input name="@name" type="number" min="1" max="3" step="0.5" style="min-width:75px"
								   class="form-control @(errors.Contains(name) ? "alert-danger" : "")"
								   value="@(values.Keys.Contains(name) ? values[name].Replace(',', '.') : item.Value.ToString())" />
						</td>
					</tr>
				}
				<tr>
					<td colspan="4">
						<strong class="pull-right">Итого (макс. @(evaluation.EvaluationValues.Where(ev => ev.Competency == competency.Id).ToList().Count * 3)):</strong>
					</td>
					<td>
						<label>@evaluation.EvaluationValues.Sum(ev => (ev.Competency == competency.Id) ? ev.Value : 0)</label>
					</td>
					@if (evaluation.Examinier != null)
					{
						<td>@evaluation.EvaluationValues.Sum(ev => (ev.Competency == competency.Id) ? ev.ReviewValue : 0)</td>
					}
					@if (evaluation.Manager != null)
					{
						<td>@evaluation.EvaluationValues.Sum(ev => (ev.Competency == competency.Id) ? ev.ManagerValue : 0)</td>
					}
					<td>
						<label class="sum"></label>
					</td>
				</tr>
			</table>
		}

		<hr />
		<div class="form-group col-md-10">
			<input type="submit" value="Готово" class="btn btn-default" />
		</div>
	</div>
</form>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script>
	$(document).on('keyup change', 'table input[type="number"]', function (e) {
		var sum = 0,
			el = e.target,
			table = $(el).parents('table'),
			label = $(table).find('label.sum');

		$(el).removeClass('alert-danger');

		$.each($(table).find('input[type="number"]'), function (e, input) {
			sum += (parseFloat($(input).val()) || 0);
		});

		$(label).html(sum.toFixed(1));
	});

	$.each($('table'), function (e, table) {
		var sum = 0;

		$.each($(table).find('input[type="number"]'), function (e, input) {
			sum += (parseFloat($(input).val()) || 0);
		});

		$(table).find('label.sum').html(sum.toFixed(1));
	});
</script>
