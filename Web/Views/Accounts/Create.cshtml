@model Account

@{
	ViewBag.Title = "Создание сотрудника";
	var roleSelect = new SelectList(RoleMap.Default.GetDisplayRoleMap(), "Key", "Value", Role.Employee);
}

<h2>Создать сотрудника</h2>


@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">

		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		<div class="form-group">
			@Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Region, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Region, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Region, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.MicroRegion, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.MicroRegion, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.MicroRegion, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Position, htmlAttributes: new {@class = "control-label col-md-2"})
			<div class="col-md-10">
				@Html.EditorFor(model => model.Position, new {htmlAttributes = new {@class = "form-control"}})
				@Html.ValidationMessageFor(model => model.Position, "", new {@class = "text-danger"})
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.FunctionalArea, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.FunctionalArea, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.FunctionalArea, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.FullName, htmlAttributes: new {@class = "control-label col-md-2"})
			<div class="col-md-10">
				@Html.EditorFor(model => model.FullName, new {htmlAttributes = new {@class = "form-control"}})
				@Html.ValidationMessageFor(model => model.FullName, "", new {@class = "text-danger"})
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.AdministrativeManager, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(model => model.AdministrativeManagerId, ViewBag.Accounts as SelectList, "", htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.AdministrativeManager, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Manager, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(model => model.ManagerId, ViewBag.Accounts as SelectList, "", htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.Manager, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Sex, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
			</div>
		</div>

		@if (User.IsInRole("Admin"))
		{
			<div class="form-group">
				@Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownListFor(model => model.Role, roleSelect, htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
				</div>
			</div>
		}

		<div class="form-group">
			@Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-2"></div>
			<div class="col-md-10">
				@Html.EditorFor(model => model.Active)
				@Html.LabelFor(model => model.Active)
			</div>
			@Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Создать" class="btn btn-default" />
			</div>
		</div>
	</div>
}

<div>
	@Html.ActionLink("Вернуться к списку", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
